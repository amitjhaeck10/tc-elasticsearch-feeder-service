authRealm: tcjwt
authDomain: "${AUTH_DOMAIN:-topcoder-dev.com}"

useResponseFilter: false

# Database settings.
databases:

  - datasourceName: oltp

    # the name of your JDBC driver
    driverClass: com.informix.jdbc.IfxDriver

    # the username
    user: "${OLTP_USER:-informix}"

    password: "${OLTP_PW:-1nf0rm1x}"

    url: "${OLTP_URL:-jdbc:informix-sqli://cockpit.cloud.topcoder.com:2021/tcs_catalog:INFORMIXSERVER=informixoltp_tcp;IFX_LOCK_MODE_WAIT=5;OPTCOMPIND=0;STMT_CACHE=1;}"

    # the password
    # NOTE: password is set as a java system property: i.e., -Ddw.database.password=<password>

    validationQuery: select 1 from systables

    minSize: 1
    maxSize: 5
    initialSize: 1
  
jestClientConfiguration:
  # the elastic search URL
  elasticSearchUrl: "${ELASTIC_SEARCH_URL:-http://cockpit.cloud.topcoder.com:9200}"
  # the index name for challenges
  challengesIndexName: "${CHALLENGES_INDEX_NAME:-challenges}"
  # the max total connections
  maxTotalConnections: 10
  # connection timeout in milli-seconds
  connTimeout: 60000
  # read timeout in milli-seconds
  readTimeout: 60000
  # AWS signing enabled or not
  awsSigningEnabled: "${AWS_SIGNING_ENABLED:-false}"
  # AWS region
  awsRegion: "${AWS_REGION:-us-east-1}"
  # AWS service
  awsService: "${AWS_SERVICE:-es}"
  
# use the simple server factory if you only want to run on a single port
#server:
#  type: simple
#  connector:
#    type: http
#    port: 8080

server:
  rootPath: '/v3/*'
#  softNofileLimit: 1000
#  hardNofileLimit: 1000
  applicationConnectors:
    - type: http
      port: 8080
#    - type: https
#      port: 8443
#      keyStorePath: example.keystore
#      keyStorePassword: example
#      validateCerts: false
# this requires the alpn-boot library on the JVM's boot classpath
#    - type: spdy3
#      port: 8445
#      keyStorePath: example.keystore
#      keyStorePassword: example
#      validateCerts: false
  adminConnectors:
    - type: http
      port: 8081
#    - type: https
#      port: 8444
#      keyStorePath: example.keystore
#      keyStorePassword: example
#      validateCerts: false

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.appirio: INFO
    # io.searchbox: DEBUG
    # org.apache.http: DEBUG


  appenders:
    - type: console
      target: stdout
      threshold: ALL
      timeZone: UTC
      filterFactories:
        - type: URI

    - type: file
      currentLogFilename: /var/log/ap-challenge-feeder.log
      threshold: ALL
      archive: true
      archivedLogFilenamePattern: /var/log/ap-challenge-feeder-%d.log
      archivedFileCount: 5
      timeZone: UTC
      filterFactories:
        - type: URI
      logFormat:  "%-5level [%d{yyyy-dd-mm HH:mm:ss.SSS}] [%thread] %logger - %msg%n"

authScheme: v3

# Api version
apiVersion: v3
